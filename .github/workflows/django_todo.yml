name: Deploy to AWS EC2

on:
  workflow_dispatch:
  # Uncomment below lines if you want to trigger the action on pushes to the main branch
  # push:
  #   branches:
  #     - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up SSH for connecting to EC2
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Use private key stored in GitHub Secrets
          chmod 600 ~/.ssh/id_rsa  # Secure the SSH private key file

      # SSH into the EC2 instance and deploy the project
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Navigate to the home directory
            sudo apt update -y
            sudo apt install -y git python3 python3-pip
            cd /home/ubuntu
            if [ -d "26-dec" ]; then
              rm -rf 26-dec
            fi
            
            
            # Clone the repository or pull if it already exists
            # if [ ! -d "26-dec" ]; then
            #   git clone https://github.com/aman7433/26-dec.git
            # else
            #   cd 26-dec && git pull && cd ..
            # fi
            
            # Clone the repository
            git clone https://github.com/aman7433/26-dec.git
            
            # Navigate to the project directory
            cd 26-dec

            # Update ALLOWED_HOSTS in Django settings
            sed -i "s/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = \['${{ secrets.EC2_PUBLIC_IP }}', 'localhost', '127.0.0.1'\]/" todoApp/settings.py

            # Create a Python virtual environment if it doesn't exist
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi

            # Activate the virtual environment
            source venv/bin/activate

            # Upgrade pip
            pip install --upgrade pip

            # Install dependencies from requirements.txt
            pip install -r requirements.txt

            pip install gunicorn

            # Apply Django migrations
            python manage.py migrate

            # Start the Django development server in the background
            nohup gunicorn --bind 0.0.0.0:8001 todoApp.wsgi:application &
          EOF

